{"8523deae-0e67-4442-9c64-3764831de3b7":{"id":"8523deae-0e67-4442-9c64-3764831de3b7","value":[{"id":"62096712-b69a-48bc-ade5-3dad5b8d6ddf","type":"heading-one","children":[{"text":"Introduction Updating content"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":0,"depth":0}},"21318bc4-2aba-403c-a36e-fca83473f3eb":{"id":"21318bc4-2aba-403c-a36e-fca83473f3eb","value":[{"id":"5fa09529-3e2b-4eb7-962d-1503f0fc4d7f","type":"heading-two","children":[{"text":"Zustand is the most popular state management library"}],"props":{"nodeType":"block"}}],"type":"HeadingTwo","meta":{"order":1,"depth":0}},"d2d5a9e2-2eeb-44a5-9740-835e2adffb2b":{"id":"d2d5a9e2-2eeb-44a5-9740-835e2adffb2b","value":[{"id":"5ec7e769-7a4f-4218-8f6f-3715a399f277","type":"paragraph","children":[{"text":"A small, fast, and scalable bearbones state management solution. Zustand has a comfy API based on hooks. It isn't boilerplate or opinionated, but has enough convention to be explicit and flux-like. Its fun to have such ."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":2,"depth":0}},"a625bb95-5a17-41a8-b7b6-f5a5934d8805":{"id":"a625bb95-5a17-41a8-b7b6-f5a5934d8805","value":[{"id":"987368e7-5abf-48fc-b288-e9f61ec1adab","type":"paragraph","children":[{"text":""}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":3,"depth":0}},"ea82d308-7a34-44bd-abcc-d5ef373f7cc7":{"id":"ea82d308-7a34-44bd-abcc-d5ef373f7cc7","value":[{"id":"05fbe7c4-7254-4fcb-be32-6760c2a175ee","type":"paragraph","children":[{"text":"Don't disregard it because it's cute, it has claws! Lots of time was spent to deal with common pitfalls, like the dreaded "},{"id":"e5fa2158-b7ae-4134-825e-6bbc6cf279b3","type":"link","props":{"url":"https://react-redux.js.org/api/hooks#stale-props-and-zombie-children","target":"_self","rel":"noopener noreferrer","title":"zombie child problem","nodeType":"inline"},"children":[{"text":"zombie child problem"}]},{"text":", "},{"id":"5976ca3e-7ab2-4331-8431-e616da1bab5c","type":"link","props":{"url":"https://github.com/bvaughn/rfcs/blob/useMutableSource/text/0000-use-mutable-source.md","target":"_self","rel":"noopener noreferrer","title":"React concurrency","nodeType":"inline"},"children":[{"text":"React concurrency"}]},{"text":", and "},{"id":"304dab41-3966-4068-83ef-f63d088385ca","type":"link","props":{"url":"https://github.com/facebook/react/issues/13332","target":"_self","rel":"noopener noreferrer","title":"context loss","nodeType":"inline"},"children":[{"text":"context loss"}]},{"text":" between mixed renderers. It may be the one state manager in the React space that gets all of these right."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":4,"depth":0}},"de4254e3-2518-4f8d-94cc-2f8100eaceff":{"id":"de4254e3-2518-4f8d-94cc-2f8100eaceff","value":[{"id":"7ffa1afc-4f91-4bbb-bde8-66a83c96e160","type":"paragraph","children":[{"text":"You can try a live demo "},{"id":"88195af4-5c34-4d48-bd37-2b4bd57773a6","type":"link","props":{"url":"https://codesandbox.io/p/sandbox/dazzling-moon-itop4","target":"_self","rel":"noopener noreferrer","title":"here","nodeType":"inline"},"children":[{"text":"here"}]},{"text":"."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":5,"depth":0}},"6d387a78-a4c8-4500-98c9-fb06869ce6ec":{"id":"6d387a78-a4c8-4500-98c9-fb06869ce6ec","value":[{"id":"3ef2719c-6ef6-4136-8a5a-60c94bd22e78","type":"heading-one","children":[{"text":"Installation"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":6,"depth":0}},"6b1c4dbf-a911-4c0b-b3a3-d00c34e74d22":{"id":"6b1c4dbf-a911-4c0b-b3a3-d00c34e74d22","value":[{"id":"ea50d903-e8cf-4195-9d4a-2e476df65641","type":"paragraph","children":[{"text":"Zustand is available as a package on NPM for use:"}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":7,"depth":0}},"3bcdcddf-6a63-44c8-bef7-24040b0e2ee3":{"id":"3bcdcddf-6a63-44c8-bef7-24040b0e2ee3","value":[{"children":[{"text":"# NPM\nnpm install zustand\n# Or, use any package manager of your choice.\n"}],"type":"code","id":"820f20dc-da10-41e1-a388-480a750e281e","props":{"language":"javascript","theme":"VSCode","nodeType":"void"}}],"type":"Code","meta":{"order":8,"depth":0}},"d7719366-1bb5-4620-8447-49bd94c06faf":{"id":"d7719366-1bb5-4620-8447-49bd94c06faf","value":[{"id":"75bec012-ae82-4f27-ad55-f955acf30ccb","type":"heading-one","children":[{"text":"First create a store"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":9,"depth":0}},"c3e59d99-4ba1-4d2c-b191-dc3cc3b5814a":{"id":"c3e59d99-4ba1-4d2c-b191-dc3cc3b5814a","value":[{"id":"54e03501-aee3-4668-aa09-d47d502b6307","type":"paragraph","children":[{"text":"Your store is a hook! You can put anything in it: primitives, objects, functions. The "},{"text":"set ","code":true},{"text":"function merges the state."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":10,"depth":0}},"b9decff8-2437-4423-abbe-fcda3085baa2":{"id":"b9decff8-2437-4423-abbe-fcda3085baa2","value":[{"children":[{"text":"import { create } from 'zustand'\n\nconst useStore = create((set) => ({\n  bears: 0,\n  increasePopulation: () => set((state) => ({ bears: state.bears + 1 })),\n  removeAllBears: () => set({ bears: 0 }),\n  updateBears: (newBears) => set({ bears: newBears }),\n}))\n"}],"type":"code","id":"7e282a3f-74a8-4338-b304-e3918d130c6d","props":{"language":"javascript","theme":"VSCode","nodeType":"void"}}],"type":"Code","meta":{"order":11,"depth":0}},"c4b10d67-f2e7-4fe0-bf37-c5702e6dc66c":{"id":"c4b10d67-f2e7-4fe0-bf37-c5702e6dc66c","value":[{"id":"6699f43f-654b-41a9-8f3e-e37d2cd38ff9","type":"heading-one","children":[{"text":"Then bind your components, and that's it!"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":12,"depth":0}},"723e4d87-0479-411d-90df-f2567eb91adb":{"id":"723e4d87-0479-411d-90df-f2567eb91adb","value":[{"id":"ad1f85aa-b454-4e06-afd0-00dfc0653e5f","type":"paragraph","children":[{"text":"You can use the hook anywhere, without the need of providers. Select your state and the consuming component will re-render when that state changes. "}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":13,"depth":0}},"75293850-dc8c-4407-9f79-e075d2a73ba5":{"id":"75293850-dc8c-4407-9f79-e075d2a73ba5","value":[{"children":[{"text":"function BearCounter() {\n  const bears = useStore((state) => state.bears)\n  return <h1>{bears} around here...</h1>\n}\n\nfunction Controls() {\n  const increasePopulation = useStore((state) => state.increasePopulation)\n  return <button onClick={increasePopulation}>one up</button>\n}\n"}],"type":"code","id":"4367887f-36b5-4679-bfd7-127510f89960","props":{"language":"javascript","theme":"VSCode","nodeType":"void"}}],"type":"Code","meta":{"order":14,"depth":0}},"1b7a64ee-9979-442e-8726-6f2748e7a74b":{"id":"1b7a64ee-9979-442e-8726-6f2748e7a74b","value":[{"id":"67d5102a-4cf9-4693-ab65-33aaeaf1fbcc","type":"paragraph","children":[{"text":"In next section we will learn about managing state in zustand"}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":15,"depth":0}}}